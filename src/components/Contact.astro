---
import { Check, MessageCircle, Phone, Clock, Heart, Star } from "@lucide/astro"

// Lista de beneficios
const benefits = [
  "Asesoría personalizada",
  "Cotización inmediata",
  "Seguimiento de tu pedido",
  "Atención 24/7",
]
---

<section class="relative overflow-hidden scroll-section" id="pedidos">
  <!-- Fondo gradient -->
  <div class="absolute inset-0 bg-gradient-to-br from-pink-100 via-pink-200 to-pink-300 opacity-0 transition-opacity duration-1000 [.in-viewport_&]:opacity-100"></div>
  <div class="absolute inset-0 bg-gradient-to-tr from-transparent via-pink-300/30 to-pink-400/50 opacity-0 transition-opacity duration-1000 delay-300 [.in-viewport_&]:opacity-100"></div>

  <!-- Elementos decorativos -->
  <div class="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
    <!-- Círculos flotantes -->
    <div class="absolute -top-20 -left-20 w-40 h-40 bg-pink-300/20 rounded-full blur-2xl opacity-0 transition-all duration-1000 delay-200 [.in-viewport_&]:opacity-100"></div>
    <div class="absolute top-1/4 -right-16 w-32 h-32 bg-pink-400/25 rounded-full blur-xl opacity-0 transition-all duration-1000 delay-400 [.in-viewport_&]:opacity-100"></div>
    <div class="absolute bottom-10 left-10 w-24 h-24 bg-pink-200/30 rounded-full blur-lg opacity-0 transition-all duration-1000 delay-600 [.in-viewport_&]:opacity-100"></div>
  </div>

  <div class="relative z-10 py-20 md:py-32">
    <div class="px-4 sm:px-8 md:px-16 lg:px-32 xl:px-72">
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-12 items-center">
        <!-- Columna de texto -->
        <div class="lg:col-span-7 space-y-8 lg:space-y-10">
          <!-- Encabezado -->
          <div class="space-y-6 opacity-0 translate-y-10 transition-all duration-500 ease-out [.in-viewport_&]:opacity-100 [.in-viewport_&]:translate-y-0">
            <div class="inline-flex items-center gap-2 bg-pink-500/10 backdrop-blur-sm px-4 py-2 rounded-full border border-pink-300/30 opacity-0 transition-all duration-500 delay-100 [.in-viewport_&]:opacity-100">
              <MessageCircle class="w-4 h-4 text-pink-600" />
              <span class="text-sm font-medium text-pink-700">Contacto directo</span>
            </div>

            <h2 class="text-5xl md:text-6xl lg:text-7xl font-bold text-gray-800 leading-tight opacity-0 transition-all duration-500 delay-200 [.in-viewport_&]:opacity-100">
              ¿Listo para hacer tu
              <span class="relative inline-block">
                <span class="relative z-10 text-pink-600">pedido?</span>
                <div class="absolute -bottom-2 left-0 w-full h-4 bg-pink-300/40 rounded-lg -rotate-1 opacity-0 transition-all duration-500 delay-300 [.in-viewport_&]:opacity-100"></div>
              </span>
            </h2>

            <p class="text-xl md:text-2xl text-gray-700 leading-relaxed font-light opacity-0 transition-all duration-500 delay-300 [.in-viewport_&]:opacity-100">
              Contáctanos a través de WhatsApp y te ayudaremos a crear el dulce
              perfecto para tu ocasión especial.
            </p>
          </div>

          <!-- Lista de beneficios -->
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
            {
              benefits.map((benefit, index) => (
                <div class="flex items-center gap-4 bg-white/60 backdrop-blur-sm rounded-2xl p-4 lg:p-5 border border-pink-200/50 shadow-lg hover:shadow-xl transition-all duration-300 hover:bg-white/80 opacity-0 translate-y-10 transition-all duration-500 ease-out hover:scale-[1.02]"
                  style={`transition-delay: ${index * 100 + 400}ms`}
                  class:list={["[.in-viewport_&]:opacity-100", "[.in-viewport_&]:translate-y-0"]}
                >
                  <div class="flex-shrink-0 w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-pink-500 to-pink-600 rounded-full flex items-center justify-center shadow-lg transition-transform duration-300 group-hover:scale-110">
                    <Check class="w-5 h-5 lg:w-6 lg:h-6 text-white" stroke-width="2.5" />
                  </div>
                  <span class="text-lg lg:text-xl font-semibold text-gray-700 transition-colors duration-300 group-hover:text-gray-800">
                    {benefit}
                  </span>
                </div>
              ))
            }
          </div>

          <!-- Información adicional -->
          <div class="flex flex-wrap gap-6 lg:gap-8 opacity-0 transition-all duration-500 delay-800 [.in-viewport_&]:opacity-100">
            <div class="flex items-center gap-3">
              <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
                <Phone class="w-4 h-4 text-white" />
              </div>
              <span class="text-gray-700 font-medium">Respuesta inmediata</span>
            </div>
            <div class="flex items-center gap-3">
              <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">
                <Clock class="w-4 h-4 text-white" />
              </div>
              <span class="text-gray-700 font-medium">Disponible 24/7</span>
            </div>
          </div>
        </div>

        <!-- Columna de WhatsApp -->
        <div class="lg:col-span-5 flex justify-center lg:justify-end opacity-0 translate-x-10 transition-all duration-500 ease-out delay-500 [.in-viewport_&]:opacity-100 [.in-viewport_&]:translate-x-0">
          <div class="relative max-w-sm w-full">
            <!-- Card principal -->
            <div class="bg-white/90 backdrop-blur-lg rounded-3xl p-8 lg:p-10 shadow-2xl border border-pink-200/30 transform transition-all duration-500 hover:scale-105">
              <!-- Contenido principal -->
              <div class="relative z-10">
                <!-- Ícono de WhatsApp -->
                <div class="flex justify-center mb-8">
                  <div class="relative">
                    <div class="w-20 h-20 lg:w-24 lg:h-24 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center shadow-2xl">
                      <MessageCircle class="w-10 h-10 lg:w-12 lg:h-12 text-white" fill="currentColor" />
                    </div>
                  </div>
                </div>

                <!-- Contenido -->
                <div class="text-center space-y-6">
                  <div class="space-y-3">
                    <h3 class="text-2xl lg:text-3xl font-bold bg-gradient-to-r from-pink-500 to-pink-600 bg-clip-text text-transparent">
                      ¡Haz tu pedido ahora!
                    </h3>
                    <p class="text-gray-600 text-lg font-medium">
                      Escríbenos y te responderemos de inmediato
                    </p>
                  </div>

                  <!-- Botón de WhatsApp -->
                  <a href="https://wa.me/+584126539866?text=¡Hola!%20Me%20interesa%20hacer%20un%20pedido%20en%20SugarBloom%20🍰🎂❤️"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center gap-4 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-bold px-8 py-4 lg:px-10 lg:py-5 rounded-full transition-all duration-300 transform hover:scale-105 hover:shadow-2xl relative overflow-hidden"
                  >
                    <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                    <MessageCircle class="w-6 h-6 lg:w-7 lg:h-7 relative z-10" />
                    <span class="text-lg lg:text-xl relative z-10">Chatear por WhatsApp</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    // Configuración del Intersection Observer
    const scrollSections = document.querySelectorAll('.scroll-section');
    
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -100px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-viewport');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    scrollSections.forEach(section => {
      observer.observe(section);
    });
  });
</script>