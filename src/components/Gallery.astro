---
import ProductCard from "./ui/ProductCard.astro"

// Datos de los productos
const products = [
  {
    image: "/heimer.png",
    title: "Pasteles Artesanales",
    description: "Deliciosos pasteles hechos con ingredientes premium y decoraciones únicas.",
    price: "Desde $25.000",
    alt: "Pasteles Artesanales",
  },
  {
    image: "/heimer.png",
    title: "Macarons Franceses",
    description: "Exquisitos macarons en variedad de sabores y colores vibrantes.",
    price: "Desde $3.500 c/u",
    alt: "Macarons Franceses",
  },
  {
    image: "/heimer.png",
    title: "Cupcakes Gourmet",
    description: "Pequeñas delicias perfectas para cualquier ocasión especial.",
    price: "Desde $4.500 c/u",
    alt: "Cupcakes Gourmet",
  },
  {
    image: "/heimer.png",
    title: "Pasteles de Boda",
    description: "Creaciones elegantes para el día más especial de tu vida.",
    price: "Desde $150.000",
    alt: "Pasteles de Boda",
  },
  {
    image: "/heimer.png",
    title: "Pasteles de Cumpleaños",
    description: "Diseños personalizados para celebrar cada año de vida.",
    price: "Desde $35.000",
    alt: "Pasteles de Cumpleaños",
  },
  {
    image: "/heimer.png",
    title: "Galletas Decoradas",
    description: "Galletas artísticas perfectas como regalo o recuerdo.",
    price: "Desde $2.500 c/u",
    alt: "Galletas Decoradas",
  },
]

// Función para dividir los productos en filas de 3
const rows = [];
for (let i = 0; i < products.length; i += 3) {
  rows.push(products.slice(i, i + 3));
}
---

<section class="py-16 md:py-24 bg-pink-50 scroll-section" id="galeria">
  <div class="px-4 sm:px-8 md:px-16 lg:px-32 xl:px-72">
    <!-- Encabezado -->
    <div class="text-center mb-12 md:mb-16">
      <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold text-pink-400 mb-4 opacity-0 translate-y-10 transition-all duration-500 ease-out [.in-viewport_&]:opacity-100 [.in-viewport_&]:translate-y-0">
        Nuestra Galería
      </h2>
      <p class="text-xl md:text-2xl text-gray-700 font-medium opacity-0 translate-y-10 transition-all duration-500 ease-out delay-100 [.in-viewport_&]:opacity-100 [.in-viewport_&]:translate-y-0">
        Descubre nuestras deliciosas creaciones
      </p>
    </div>

    <!-- Grid de productos por filas -->
    <div class="space-y-6 md:space-y-8">
      {
        rows.map((row, rowIndex) => (
          <div 
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8"
            class:list={[
              '[&>*]:opacity-0 [&>*]:translate-y-10',
              '[.in-viewport_&>*]:opacity-100 [.in-viewport_&>*]:translate-y-0',
              rowIndex % 2 === 0 ? '[.in-viewport_&>*]:delay-[200ms]' : '[.in-viewport_&>*]:delay-[400ms]'
            ]}
          >
            {row.map((product, index) => (
              <ProductCard
                class:list={[
                  'transition-all duration-700 ease-[cubic-bezier(0.25,0.1,0.25,1)]',
                  'hover:scale-[1.02] hover:shadow-xl',
                  `[.in-viewport_&]:delay-[${index * 100}ms]`
                ]}
                image={product.image}
                title={product.title}
                description={product.description}
                price={product.price}
                alt={product.alt}
              />
            ))}
          </div>
        ))
      }
    </div>

    <!-- Elemento decorativo -->
    <div class="flex justify-center mt-12 md:mt-16 opacity-0 transition-all duration-500 ease-out delay-700 [.in-viewport_&]:opacity-100">
      <div class="w-24 h-1 bg-pink-400 rounded-full"></div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    // Configuración del Intersection Observer
    const scrollSections = document.querySelectorAll('.scroll-section');
    
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -100px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-viewport');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    scrollSections.forEach(section => {
      observer.observe(section);
    });
  });
</script>